TODO:

Currently working on:
  -dynamic note saving. the current predicament is properly saving forms. may require more changes to api.

  - get back end to retrieve tag if it already exists in the database and use that


- configure note create form to dynamically save every time focus is taken off of an element (if content has been inserted into that element of course).
- remove edit view upon model deletion
- fix notebook redirection bug

After these things, move on to complete backbone tags


backbone tags:
  -iterate through tags on render, making buttons then
  -upon tag input blur event
    -save already occurs(of entire note, changing the property associated with tags in this instance)
    -the corresponding tag model still needs to be generated
    -take that model, and make a button with it.
    -make a ul insert function that takes the model, makes the button, and appends to the ul
    -make tags select function that is tied to any click event that bubbles up to the tags ul
    -make tags remove function that toggles ul's class to inactive if there are no items on the ul after the remove

  -subview for show with tag as model is generated
  -show
    -user clicks on tag
    -tag is highlighted
    -if user clicks delete




then
  -tag addition/destruction on note form
    -textbox's render/destroy based on activated status of container
    -buttons with tag names render/destroy based on user creating/deleting
    tags.
    -QUESTION:
      -should I make ajax calls right away or start out with standard whole
      form submission?




Future:
-notebook edit/show combination
  -use drop down as a convenient way to show notebook

- notes api:
  -refactor h2 on sidepane to only rerender that part on

- error messages on top of primary view for when things go wrong. get teacher's help
  -error message for invalid form input
  -error message for after redirect when trying to go to note submission without already having a notebook

- note form looking awesome might complicate the api. beware

- update timeline

CSS:
  -style sidebar buttons
  -pick appropriate colors


Concerns:
  -this._tags = new BetterNote.Collections.Tags([], { note: this });
    -why exactly? are the arguments included like this?
  -success callback not being called upon successful model destruction.
