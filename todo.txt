TODO:

First:
  refactor everything in one foul swoop

backbone tags:
  -what html tags store them?
  -note show should send them down --api refactor (note.tags)
    -model method for it

    -jquery manipulated [+] and textbox for tag input
    -create new subview for each tag show
    -input
      -user clicks on [+] for input.
      -text box opens up
      -user fills out text, then keypress's tab or clicks elsewhere
      -ajax post request sent
      -model is generated for new tag immediately
      -subview for show with tag as model is generated
      -new + button is generated
        -jquery addition with class and event handler. simple to implement.
    -show
      -user clicks on tag
      -tag is highlighted
      -if user clicks delete

then
  -tag addition/destruction on note form
    -textbox's render/destroy based on activated status of container
    -buttons with tag names render/destroy based on user creating/deleting
    tags.
    -QUESTION:
      -should I make ajax calls right away or start out with standard whole
      form submission?




Future:
-notebook edit/show combination
  -use drop down as a convenient way to show notebook

- notes api:
  -refactor h2 on sidepane to only rerender that part on

- error messages on top of primary view for when things go wrong. get teacher's help
  -error message for invalid form input
  -error message for after redirect when trying to go to note submission without already having a notebook

- note form looking awesome might complicate the api. beware

- update timeline

CSS:
  -style sidebar buttons
  -pick appropriate colors


Concerns:
  -success callback not being called upon successful model destruction.
